// Code generated by bpf2go; DO NOT EDIT.
//go:build mips || mips64 || ppc64 || s390x

package switch_agent

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadSwitchAgentUnknownUnicastFlooding returns the embedded CollectionSpec for SwitchAgentUnknownUnicastFlooding.
func LoadSwitchAgentUnknownUnicastFlooding() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_SwitchAgentUnknownUnicastFloodingBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load SwitchAgentUnknownUnicastFlooding: %w", err)
	}

	return spec, err
}

// LoadSwitchAgentUnknownUnicastFloodingObjects loads SwitchAgentUnknownUnicastFlooding and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//	*SwitchAgentUnknownUnicastFloodingObjects
//	*SwitchAgentUnknownUnicastFloodingPrograms
//	*SwitchAgentUnknownUnicastFloodingMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadSwitchAgentUnknownUnicastFloodingObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadSwitchAgentUnknownUnicastFlooding()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// SwitchAgentUnknownUnicastFloodingSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type SwitchAgentUnknownUnicastFloodingSpecs struct {
	SwitchAgentUnknownUnicastFloodingProgramSpecs
	SwitchAgentUnknownUnicastFloodingMapSpecs
}

// SwitchAgentUnknownUnicastFloodingSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type SwitchAgentUnknownUnicastFloodingProgramSpecs struct {
	SwitchAgentUnknownUnicastFlooding *ebpf.ProgramSpec `ebpf:"switch_agent_unknown_unicast_flooding"`
}

// SwitchAgentUnknownUnicastFloodingMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type SwitchAgentUnknownUnicastFloodingMapSpecs struct {
	InterfacesArray       *ebpf.MapSpec `ebpf:"interfaces_array"`
	InterfacesArrayLength *ebpf.MapSpec `ebpf:"interfaces_array_length"`
}

// SwitchAgentUnknownUnicastFloodingObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadSwitchAgentUnknownUnicastFloodingObjects or ebpf.CollectionSpec.LoadAndAssign.
type SwitchAgentUnknownUnicastFloodingObjects struct {
	SwitchAgentUnknownUnicastFloodingPrograms
	SwitchAgentUnknownUnicastFloodingMaps
}

func (o *SwitchAgentUnknownUnicastFloodingObjects) Close() error {
	return _SwitchAgentUnknownUnicastFloodingClose(
		&o.SwitchAgentUnknownUnicastFloodingPrograms,
		&o.SwitchAgentUnknownUnicastFloodingMaps,
	)
}

// SwitchAgentUnknownUnicastFloodingMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadSwitchAgentUnknownUnicastFloodingObjects or ebpf.CollectionSpec.LoadAndAssign.
type SwitchAgentUnknownUnicastFloodingMaps struct {
	InterfacesArray       *ebpf.Map `ebpf:"interfaces_array"`
	InterfacesArrayLength *ebpf.Map `ebpf:"interfaces_array_length"`
}

func (m *SwitchAgentUnknownUnicastFloodingMaps) Close() error {
	return _SwitchAgentUnknownUnicastFloodingClose(
		m.InterfacesArray,
		m.InterfacesArrayLength,
	)
}

// SwitchAgentUnknownUnicastFloodingPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadSwitchAgentUnknownUnicastFloodingObjects or ebpf.CollectionSpec.LoadAndAssign.
type SwitchAgentUnknownUnicastFloodingPrograms struct {
	SwitchAgentUnknownUnicastFlooding *ebpf.Program `ebpf:"switch_agent_unknown_unicast_flooding"`
}

func (p *SwitchAgentUnknownUnicastFloodingPrograms) Close() error {
	return _SwitchAgentUnknownUnicastFloodingClose(
		p.SwitchAgentUnknownUnicastFlooding,
	)
}

func _SwitchAgentUnknownUnicastFloodingClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//
//go:embed switchagentunknownunicastflooding_bpfeb.o
var _SwitchAgentUnknownUnicastFloodingBytes []byte
