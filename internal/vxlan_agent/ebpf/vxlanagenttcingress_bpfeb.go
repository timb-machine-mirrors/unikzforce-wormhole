// Code generated by bpf2go; DO NOT EDIT.
//go:build mips || mips64 || ppc64 || s390x

package ebpf

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadVxlanAgentTCIngress returns the embedded CollectionSpec for VxlanAgentTCIngress.
func LoadVxlanAgentTCIngress() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_VxlanAgentTCIngressBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load VxlanAgentTCIngress: %w", err)
	}

	return spec, err
}

// LoadVxlanAgentTCIngressObjects loads VxlanAgentTCIngress and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//	*VxlanAgentTCIngressObjects
//	*VxlanAgentTCIngressPrograms
//	*VxlanAgentTCIngressMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadVxlanAgentTCIngressObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadVxlanAgentTCIngress()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// VxlanAgentTCIngressSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type VxlanAgentTCIngressSpecs struct {
	VxlanAgentTCIngressProgramSpecs
	VxlanAgentTCIngressMapSpecs
}

// VxlanAgentTCIngressSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type VxlanAgentTCIngressProgramSpecs struct {
	VxlanAgentTcIngress *ebpf.ProgramSpec `ebpf:"vxlan_agent_tc_ingress"`
}

// VxlanAgentTCIngressMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type VxlanAgentTCIngressMapSpecs struct {
}

// VxlanAgentTCIngressObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadVxlanAgentTCIngressObjects or ebpf.CollectionSpec.LoadAndAssign.
type VxlanAgentTCIngressObjects struct {
	VxlanAgentTCIngressPrograms
	VxlanAgentTCIngressMaps
}

func (o *VxlanAgentTCIngressObjects) Close() error {
	return _VxlanAgentTCIngressClose(
		&o.VxlanAgentTCIngressPrograms,
		&o.VxlanAgentTCIngressMaps,
	)
}

// VxlanAgentTCIngressMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadVxlanAgentTCIngressObjects or ebpf.CollectionSpec.LoadAndAssign.
type VxlanAgentTCIngressMaps struct {
}

func (m *VxlanAgentTCIngressMaps) Close() error {
	return _VxlanAgentTCIngressClose()
}

// VxlanAgentTCIngressPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadVxlanAgentTCIngressObjects or ebpf.CollectionSpec.LoadAndAssign.
type VxlanAgentTCIngressPrograms struct {
	VxlanAgentTcIngress *ebpf.Program `ebpf:"vxlan_agent_tc_ingress"`
}

func (p *VxlanAgentTCIngressPrograms) Close() error {
	return _VxlanAgentTCIngressClose(
		p.VxlanAgentTcIngress,
	)
}

func _VxlanAgentTCIngressClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//
//go:embed vxlanagenttcingress_bpfeb.o
var _VxlanAgentTCIngressBytes []byte
